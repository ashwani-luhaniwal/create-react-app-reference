// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class HelloWorldList extends _react.Component {
    constructor(props) {
        super(props);
        this.state = { greetings: ['Jim', 'Sally', 'Ashwani'] };
        this.renderGreetings = this.renderGreetings.bind(this);
        this.addGreeting = this.addGreeting.bind(this);
        this.removeGreeting = this.removeGreeting.bind(this);
    }
    renderGreetings() {
        // "map" each item in array to special anonymous function which returns HelloWorld
        // component. The "key" is here because React wants to know which element to modify/
        // remove when one of the elements in your list changes, it has to be able to
        // uniquely identify which element it is, so here we are just specifying key as name.
        return this.state.greetings.map(name =>
        _react2.default.createElement(_HelloWorld2.default, { key: name, name: name, removeGreeting: this.removeGreeting, __source: { fileName: _jsxFileName, lineNumber: 20 }, __self: this }));

    }
    addGreeting(newName) {
        // add a new element onto list of greetings
        this.setState({ greetings: [...this.state.greetings, newName] });
    }
    removeGreeting(removeName) {
        // filter our list of greetings only to greetings that do not match the name of 
        // the greeting we want to remove
        const filteredGreetings = this.state.greetings.filter(name => {
            return name !== removeName;
        });
        this.setState({ greetings: filteredGreetings });
    }
    render() {
        return (
            _react2.default.createElement('div', { className: 'HelloWorldList', __source: { fileName: _jsxFileName, lineNumber: 37 }, __self: this },
                _react2.default.createElement(_AddGreeter2.default, { addGreeting: this.addGreeting, __source: { fileName: _jsxFileName, lineNumber: 38 }, __self: this }),
                this.renderGreetings()));


    }} renders and matches our snapshot 1`] = `
<div
  className="HelloWorldList"
>
  <div
    className="AppGreeter"
  >
    <input
      onChange={[Function]}
      type="text"
      value=""
    />
      
    <button
      onClick={[Function]}
    >
      Add
    </button>
  </div>
  <div
    className="HelloWorld"
  >
    Hello
     
    Jim
    !
    <br />
    <button
      className="frenchify"
      onClick={[Function]}
    >
      Frenchify!
    </button>
    <br />
    <button
      className="remove"
      onClick={[Function]}
    >
      Remove Me!
    </button>
  </div>
  <div
    className="HelloWorld"
  >
    Hello
     
    Sally
    !
    <br />
    <button
      className="frenchify"
      onClick={[Function]}
    >
      Frenchify!
    </button>
    <br />
    <button
      className="remove"
      onClick={[Function]}
    >
      Remove Me!
    </button>
  </div>
  <div
    className="HelloWorld"
  >
    Hello
     
    Ashwani
    !
    <br />
    <button
      className="frenchify"
      onClick={[Function]}
    >
      Frenchify!
    </button>
    <br />
    <button
      className="remove"
      onClick={[Function]}
    >
      Remove Me!
    </button>
  </div>
</div>
`;
